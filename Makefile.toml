[tasks.release-build]
command = "cargo"
args = ["build", "--release", "--target", "x86_64-unknown-linux-musl"]

[tasks.development-build]
command = "cargo"
args = ["build", "--target", "x86_64-unknown-linux-musl"]

[tasks.strip]
command = "strip"
args = ["target/x86_64-unknown-linux-musl/release/bp_detect", "target/x86_64-unknown-linux-musl/release/bp_build"]

[tasks.pkg]
script_runner = "@shell"
script = '''
tmpdir=$(mktemp -d)
mkdir -p "$tmpdir"/bin
cp target/x86_64-unknown-linux-musl/release/bp_detect target/x86_64-unknown-linux-musl/release/bp_build "$tmpdir"/bin
mv "$tmpdir"/bin/bp_detect "$tmpdir"/bin/detect
mv "$tmpdir"/bin/bp_build "$tmpdir"/bin/build
cp buildpack.toml "$tmpdir"
cp package.toml "$tmpdir"
mkdir -p out/packages/
tar -czf out/packages/inline-buildpack-v"$CARGO_MAKE_PROJECT_VERSION".tgz -C "$tmpdir" bin/ buildpack.toml package.toml
'''

[tasks.prepare]
script_runner = "@shell"
script = '''
tmpdir="out/development"
rm -rf "$tmpdir"
mkdir -p "$tmpdir"/bin
cp target/x86_64-unknown-linux-musl/debug/bp_detect target/x86_64-unknown-linux-musl/debug/bp_build "$tmpdir"/bin
mv "$tmpdir"/bin/bp_detect "$tmpdir"/bin/detect
mv "$tmpdir"/bin/bp_build "$tmpdir"/bin/build
cp buildpack.toml "$tmpdir"
'''

[tasks.release]
dependencies = [
  "release-build",
  "strip",
  "pkg"
]

[tasks.development]
dependencies = [
  "development-build",
  "prepare"
]
